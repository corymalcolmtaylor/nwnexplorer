State 0 conflicts: 10 shift/reduce
State 130 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INTEGER_CONST
    3                   | FLOAT_CONST
    4                   | STRING_CONST
    5                   | OBJECT_SELF_CONST
    6                   | OBJECT_INVALID_CONST
    7                   | '(' expression ')'
    8                   | '[' ']'
    9                   | '[' FLOAT_CONST ']'
   10                   | '[' FLOAT_CONST ',' FLOAT_CONST ']'
   11                   | '[' FLOAT_CONST ',' FLOAT_CONST ',' FLOAT_CONST ']'

   12 postfix_expression: primary_expression
   13                   | IDENTIFIER '(' argument_expression_list ')'
   14                   | IDENTIFIER '(' ')'
   15                   | postfix_expression '.' IDENTIFIER
   16                   | postfix_expression PLUSPLUS
   17                   | postfix_expression MINUSMINUS

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list ',' assignment_expression

   20 unary_expression: postfix_expression
   21                 | PLUSPLUS unary_expression
   22                 | MINUSMINUS unary_expression
   23                 | '+' unary_expression
   24                 | '-' unary_expression
   25                 | '~' unary_expression
   26                 | '!' unary_expression

   27 multiplicative_expression: unary_expression
   28                          | multiplicative_expression '*' unary_expression
   29                          | multiplicative_expression '/' unary_expression
   30                          | multiplicative_expression '%' unary_expression

   31 additive_expression: multiplicative_expression
   32                    | additive_expression '+' multiplicative_expression
   33                    | additive_expression '-' multiplicative_expression

   34 shift_expression: additive_expression
   35                 | shift_expression SL additive_expression
   36                 | shift_expression SR additive_expression
   37                 | shift_expression USR additive_expression

   38 relational_expression: shift_expression
   39                      | relational_expression '<' shift_expression
   40                      | relational_expression '>' shift_expression
   41                      | relational_expression LTEQ shift_expression
   42                      | relational_expression GTEQ shift_expression

   43 equality_expression: relational_expression
   44                    | equality_expression EQ relational_expression
   45                    | equality_expression NOTEQ relational_expression

   46 and_expression: equality_expression
   47               | and_expression '&' equality_expression

   48 exclusive_or_expression: and_expression
   49                        | exclusive_or_expression '^' and_expression

   50 inclusive_or_expression: exclusive_or_expression
   51                        | inclusive_or_expression '|' exclusive_or_expression

   52 logical_and_expression: inclusive_or_expression
   53                       | logical_and_expression ANDAND inclusive_or_expression

   54 logical_or_expression: logical_and_expression
   55                      | logical_or_expression OROR logical_and_expression

   56 conditional_expression: logical_or_expression
   57                       | logical_or_expression '?' expression ':' conditional_expression

   58 assignment_expression: conditional_expression
   59                      | unary_expression '=' assignment_expression
   60                      | unary_expression MULEQ assignment_expression
   61                      | unary_expression DIVEQ assignment_expression
   62                      | unary_expression MODEQ assignment_expression
   63                      | unary_expression ADDEQ assignment_expression
   64                      | unary_expression SUBEQ assignment_expression
   65                      | unary_expression SLEQ assignment_expression
   66                      | unary_expression SREQ assignment_expression
   67                      | unary_expression USREQ assignment_expression
   68                      | unary_expression ANDEQ assignment_expression
   69                      | unary_expression XOREQ assignment_expression
   70                      | unary_expression OREQ assignment_expression

   71 expression: assignment_expression

   72 constant_expression: conditional_expression

   73 $@1: %empty

   74 qualified_type_specifier: CONST $@1 type_specifier
   75                         | type_specifier

   76 type_specifier: VOID_TYPE
   77               | INT_TYPE
   78               | FLOAT_TYPE
   79               | OBJECT_TYPE
   80               | STRING_TYPE
   81               | ACTION_TYPE
   82               | VECTOR_TYPE
   83               | struct_type_start IDENTIFIER
   84               | ENGINE_TYPE

   85 struct_type_start: STRUCT_TYPE

   86 statement: non_blank_statement
   87          | ';'

   88 statement_blank_error: non_blank_statement
   89                      | ';'

   90 non_blank_statement: labeled_statement
   91                    | compound_statement
   92                    | expression_statement
   93                    | selection_statement
   94                    | iteration_statement
   95                    | jump_statement
   96                    | declaration

   97 labeled_statement: case_statement

   98 $@2: %empty

   99 case_statement: CASE $@2 constant_expression ':'

  100 $@3: %empty

  101 case_statement: DEFAULT $@3 ':'

  102 compound_statement: compound_statement_start '}'
  103                   | compound_statement_start statement_list '}'

  104 compound_statement_start: '{'

  105 statement_list: statement
  106               | statement_list statement

  107 $@4: %empty

  108 expression_statement: $@4 expression ';'
  109                     | error

  110 selection_statement: if_start statement_blank_error
  111                    | if_else_start statement_blank_error
  112                    | switch_start statement

  113 if_else_start: if_start statement_blank_error ELSE

  114 $@5: %empty

  115 if_start: IF '(' $@5 expression ')'

  116 $@6: %empty

  117 switch_start: SWITCH $@6 '(' expression ')'

  118 iteration_statement: while_start statement

  119 $@7: %empty

  120 iteration_statement: do_start statement WHILE $@7 '(' expression ')' ';'
  121                    | for_start statement

  122 for_start: for_start_start ';' ';' ')'
  123          | for_start_start expression ';' ';' ')'
  124          | for_start_start ';' expression ';' ')'
  125          | for_start_start expression ';' expression ';' ')'
  126          | for_start_start ';' ';' expression ')'
  127          | for_start_start expression ';' ';' expression ')'
  128          | for_start_start ';' expression ';' expression ')'
  129          | for_start_start expression ';' expression ';' expression ')'

  130 for_start_start: FOR '('

  131 $@8: %empty

  132 while_start: WHILE '(' $@8 expression ')'

  133 do_start: DO

  134 $@9: %empty

  135 jump_statement: CONTINUE $@9 ';'

  136 $@10: %empty

  137 jump_statement: BREAK $@10 ';'
  138               | return_start ';'
  139               | return_start expression ';'

  140 return_start: RETURN

  141 declaration: qualified_type_specifier init_declarator_list ';'

  142 init_declarator_list: init_declarator
  143                     | init_declarator_list ',' init_declarator

  144 init_declarator: init_declarator_identifier
  145                | init_declarator_identifier '=' assignment_expression

  146 init_declarator_identifier: IDENTIFIER

  147 function_definition: function_declarator compound_statement

  148 function_prototype: function_declarator ';'

  149 function_declarator: qualified_type_specifier IDENTIFIER '(' function_parameter_type_list ')'
  150                    | qualified_type_specifier IDENTIFIER '(' ')'

  151 function_parameter_type_list: function_parameter_list
  152                             | function_parameter_list ','

  153 function_parameter_list: function_parameter_declaration
  154                        | function_parameter_list ',' function_parameter_declaration

  155 function_parameter_declaration: qualified_type_specifier IDENTIFIER
  156                               | qualified_type_specifier IDENTIFIER '=' assignment_expression

  157 struct_definition: struct_type_start IDENTIFIER '{' struct_declaration_list '}' ';'

  158 struct_declaration_list: struct_declaration
  159                        | struct_declaration_list struct_declaration

  160 struct_declaration: qualified_type_specifier struct_declarator_list ';'

  161 struct_declarator_list: IDENTIFIER
  162                       | struct_declarator_list ',' IDENTIFIER

  163 translation_unit: %empty
  164                 | external_declaration
  165                 | translation_unit external_declaration
  166                 | error

  167 external_declaration: function_definition
  168                     | function_prototype
  169                     | declaration
  170                     | struct_definition


Terminals, with rules where they appear

$end (0) 0
'!' (33) 26
'%' (37) 30
'&' (38) 47
'(' (40) 7 13 14 115 117 120 130 132 149 150
')' (41) 7 13 14 115 117 120 122 123 124 125 126 127 128 129 132 149
    150
'*' (42) 28
'+' (43) 23 32
',' (44) 10 11 19 143 152 154 162
'-' (45) 24 33
'.' (46) 15
'/' (47) 29
':' (58) 57 99 101
';' (59) 87 89 108 120 122 123 124 125 126 127 128 129 135 137 138
    139 141 148 157 160
'<' (60) 39
'=' (61) 59 145 156
'>' (62) 40
'?' (63) 57
'[' (91) 8 9 10 11
']' (93) 8 9 10 11
'^' (94) 49
'{' (123) 104 157
'|' (124) 51
'}' (125) 102 103 157
'~' (126) 25
error (256) 109 166
IDENTIFIER (258) 1 13 14 15 83 146 149 150 155 156 157 161 162
INTEGER_CONST (259) 2
FLOAT_CONST (260) 3 9 10 11
STRING_CONST (261) 4
ADDEQ (262) 63
SUBEQ (263) 64
MULEQ (264) 60
DIVEQ (265) 61
MODEQ (266) 62
XOREQ (267) 69
ANDEQ (268) 68
OREQ (269) 70
SL (270) 35
SR (271) 36
USR (272) 37
SLEQ (273) 65
SREQ (274) 66
USREQ (275) 67
EQ (276) 44
NOTEQ (277) 45
LTEQ (278) 41
GTEQ (279) 42
ANDAND (280) 53
OROR (281) 55
PLUSPLUS (282) 16 21
MINUSMINUS (283) 17 22
FLOAT_TYPE (284) 78
INT_TYPE (285) 77
OBJECT_TYPE (286) 79
STRING_TYPE (287) 80
VOID_TYPE (288) 76
STRUCT_TYPE (289) 85
VECTOR_TYPE (290) 82
ENGINE_TYPE (291) 84
ACTION_TYPE (292) 81
OBJECT_SELF_CONST (293) 5
OBJECT_INVALID_CONST (294) 6
BREAK (295) 137
CASE (296) 99
CONTINUE (297) 135
DEFAULT (298) 101
DO (299) 133
ELSE (300) 113
FOR (301) 130
IF (302) 115
RETURN (303) 140
SWITCH (304) 117
WHILE (305) 120 132
CONST (306) 74


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
primary_expression (77)
    on left: 1 2 3 4 5 6 7 8 9 10 11, on right: 12
postfix_expression (78)
    on left: 12 13 14 15 16 17, on right: 15 16 17 20
argument_expression_list (79)
    on left: 18 19, on right: 13 19
unary_expression (80)
    on left: 20 21 22 23 24 25 26, on right: 21 22 23 24 25 26 27 28
    29 30 59 60 61 62 63 64 65 66 67 68 69 70
multiplicative_expression (81)
    on left: 27 28 29 30, on right: 28 29 30 31 32 33
additive_expression (82)
    on left: 31 32 33, on right: 32 33 34 35 36 37
shift_expression (83)
    on left: 34 35 36 37, on right: 35 36 37 38 39 40 41 42
relational_expression (84)
    on left: 38 39 40 41 42, on right: 39 40 41 42 43 44 45
equality_expression (85)
    on left: 43 44 45, on right: 44 45 46 47
and_expression (86)
    on left: 46 47, on right: 47 48 49
exclusive_or_expression (87)
    on left: 48 49, on right: 49 50 51
inclusive_or_expression (88)
    on left: 50 51, on right: 51 52 53
logical_and_expression (89)
    on left: 52 53, on right: 53 54 55
logical_or_expression (90)
    on left: 54 55, on right: 55 56 57
conditional_expression (91)
    on left: 56 57, on right: 57 58 72
assignment_expression (92)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 18 19
    59 60 61 62 63 64 65 66 67 68 69 70 71 145 156
expression (93)
    on left: 71, on right: 7 57 108 115 117 120 123 124 125 126 127
    128 129 132 139
constant_expression (94)
    on left: 72, on right: 99
qualified_type_specifier (95)
    on left: 74 75, on right: 141 149 150 155 156 160
$@1 (96)
    on left: 73, on right: 74
type_specifier (97)
    on left: 76 77 78 79 80 81 82 83 84, on right: 74 75
struct_type_start (98)
    on left: 85, on right: 83 157
statement (99)
    on left: 86 87, on right: 105 106 112 118 120 121
statement_blank_error (100)
    on left: 88 89, on right: 110 111 113
non_blank_statement (101)
    on left: 90 91 92 93 94 95 96, on right: 86 88
labeled_statement (102)
    on left: 97, on right: 90
case_statement (103)
    on left: 99 101, on right: 97
$@2 (104)
    on left: 98, on right: 99
$@3 (105)
    on left: 100, on right: 101
compound_statement (106)
    on left: 102 103, on right: 91 147
compound_statement_start (107)
    on left: 104, on right: 102 103
statement_list (108)
    on left: 105 106, on right: 103 106
expression_statement (109)
    on left: 108 109, on right: 92
$@4 (110)
    on left: 107, on right: 108
selection_statement (111)
    on left: 110 111 112, on right: 93
if_else_start (112)
    on left: 113, on right: 111
if_start (113)
    on left: 115, on right: 110 113
$@5 (114)
    on left: 114, on right: 115
switch_start (115)
    on left: 117, on right: 112
$@6 (116)
    on left: 116, on right: 117
iteration_statement (117)
    on left: 118 120 121, on right: 94
$@7 (118)
    on left: 119, on right: 120
for_start (119)
    on left: 122 123 124 125 126 127 128 129, on right: 121
for_start_start (120)
    on left: 130, on right: 122 123 124 125 126 127 128 129
while_start (121)
    on left: 132, on right: 118
$@8 (122)
    on left: 131, on right: 132
do_start (123)
    on left: 133, on right: 120
jump_statement (124)
    on left: 135 137 138 139, on right: 95
$@9 (125)
    on left: 134, on right: 135
$@10 (126)
    on left: 136, on right: 137
return_start (127)
    on left: 140, on right: 138 139
declaration (128)
    on left: 141, on right: 96 169
init_declarator_list (129)
    on left: 142 143, on right: 141 143
init_declarator (130)
    on left: 144 145, on right: 142 143
init_declarator_identifier (131)
    on left: 146, on right: 144 145
function_definition (132)
    on left: 147, on right: 167
function_prototype (133)
    on left: 148, on right: 168
function_declarator (134)
    on left: 149 150, on right: 147 148
function_parameter_type_list (135)
    on left: 151 152, on right: 149
function_parameter_list (136)
    on left: 153 154, on right: 151 152 154
function_parameter_declaration (137)
    on left: 155 156, on right: 153 154
struct_definition (138)
    on left: 157, on right: 170
struct_declaration_list (139)
    on left: 158 159, on right: 157 159
struct_declaration (140)
    on left: 160, on right: 158 159
struct_declarator_list (141)
    on left: 161 162, on right: 160 162
translation_unit (142)
    on left: 163 164 165 166, on right: 0 165
external_declaration (143)
    on left: 167 168 169 170, on right: 164 165


State 0

    0 $accept: . translation_unit $end

    error        shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    CONST        shift, and go to state 11

    $end         reduce using rule 163 (translation_unit)
    FLOAT_TYPE   [reduce using rule 163 (translation_unit)]
    INT_TYPE     [reduce using rule 163 (translation_unit)]
    OBJECT_TYPE  [reduce using rule 163 (translation_unit)]
    STRING_TYPE  [reduce using rule 163 (translation_unit)]
    VOID_TYPE    [reduce using rule 163 (translation_unit)]
    STRUCT_TYPE  [reduce using rule 163 (translation_unit)]
    VECTOR_TYPE  [reduce using rule 163 (translation_unit)]
    ENGINE_TYPE  [reduce using rule 163 (translation_unit)]
    ACTION_TYPE  [reduce using rule 163 (translation_unit)]
    CONST        [reduce using rule 163 (translation_unit)]

    qualified_type_specifier  go to state 12
    type_specifier            go to state 13
    struct_type_start         go to state 14
    declaration               go to state 15
    function_definition       go to state 16
    function_prototype        go to state 17
    function_declarator       go to state 18
    struct_definition         go to state 19
    translation_unit          go to state 20
    external_declaration      go to state 21


State 1

  166 translation_unit: error .

    $default  reduce using rule 166 (translation_unit)


State 2

   78 type_specifier: FLOAT_TYPE .

    $default  reduce using rule 78 (type_specifier)


State 3

   77 type_specifier: INT_TYPE .

    $default  reduce using rule 77 (type_specifier)


State 4

   79 type_specifier: OBJECT_TYPE .

    $default  reduce using rule 79 (type_specifier)


State 5

   80 type_specifier: STRING_TYPE .

    $default  reduce using rule 80 (type_specifier)


State 6

   76 type_specifier: VOID_TYPE .

    $default  reduce using rule 76 (type_specifier)


State 7

   85 struct_type_start: STRUCT_TYPE .

    $default  reduce using rule 85 (struct_type_start)


State 8

   82 type_specifier: VECTOR_TYPE .

    $default  reduce using rule 82 (type_specifier)


State 9

   84 type_specifier: ENGINE_TYPE .

    $default  reduce using rule 84 (type_specifier)


State 10

   81 type_specifier: ACTION_TYPE .

    $default  reduce using rule 81 (type_specifier)


State 11

   74 qualified_type_specifier: CONST . $@1 type_specifier

    $default  reduce using rule 73 ($@1)

    $@1  go to state 22


State 12

  141 declaration: qualified_type_specifier . init_declarator_list ';'
  149 function_declarator: qualified_type_specifier . IDENTIFIER '(' function_parameter_type_list ')'
  150                    | qualified_type_specifier . IDENTIFIER '(' ')'

    IDENTIFIER  shift, and go to state 23

    init_declarator_list        go to state 24
    init_declarator             go to state 25
    init_declarator_identifier  go to state 26


State 13

   75 qualified_type_specifier: type_specifier .

    $default  reduce using rule 75 (qualified_type_specifier)


State 14

   83 type_specifier: struct_type_start . IDENTIFIER
  157 struct_definition: struct_type_start . IDENTIFIER '{' struct_declaration_list '}' ';'

    IDENTIFIER  shift, and go to state 27


State 15

  169 external_declaration: declaration .

    $default  reduce using rule 169 (external_declaration)


State 16

  167 external_declaration: function_definition .

    $default  reduce using rule 167 (external_declaration)


State 17

  168 external_declaration: function_prototype .

    $default  reduce using rule 168 (external_declaration)


State 18

  147 function_definition: function_declarator . compound_statement
  148 function_prototype: function_declarator . ';'

    ';'  shift, and go to state 28
    '{'  shift, and go to state 29

    compound_statement        go to state 30
    compound_statement_start  go to state 31


State 19

  170 external_declaration: struct_definition .

    $default  reduce using rule 170 (external_declaration)


State 20

    0 $accept: translation_unit . $end
  165 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 32
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    CONST        shift, and go to state 11

    qualified_type_specifier  go to state 12
    type_specifier            go to state 13
    struct_type_start         go to state 14
    declaration               go to state 15
    function_definition       go to state 16
    function_prototype        go to state 17
    function_declarator       go to state 18
    struct_definition         go to state 19
    external_declaration      go to state 33


State 21

  164 translation_unit: external_declaration .

    $default  reduce using rule 164 (translation_unit)


State 22

   74 qualified_type_specifier: CONST $@1 . type_specifier

    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10

    type_specifier     go to state 34
    struct_type_start  go to state 35


State 23

  146 init_declarator_identifier: IDENTIFIER .
  149 function_declarator: qualified_type_specifier IDENTIFIER . '(' function_parameter_type_list ')'
  150                    | qualified_type_specifier IDENTIFIER . '(' ')'

    '('  shift, and go to state 36

    $default  reduce using rule 146 (init_declarator_identifier)


State 24

  141 declaration: qualified_type_specifier init_declarator_list . ';'
  143 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 37
    ';'  shift, and go to state 38


State 25

  142 init_declarator_list: init_declarator .

    $default  reduce using rule 142 (init_declarator_list)


State 26

  144 init_declarator: init_declarator_identifier .
  145                | init_declarator_identifier . '=' assignment_expression

    '='  shift, and go to state 39

    $default  reduce using rule 144 (init_declarator)


State 27

   83 type_specifier: struct_type_start IDENTIFIER .
  157 struct_definition: struct_type_start IDENTIFIER . '{' struct_declaration_list '}' ';'

    '{'  shift, and go to state 40

    $default  reduce using rule 83 (type_specifier)


State 28

  148 function_prototype: function_declarator ';' .

    $default  reduce using rule 148 (function_prototype)


State 29

  104 compound_statement_start: '{' .

    $default  reduce using rule 104 (compound_statement_start)


State 30

  147 function_definition: function_declarator compound_statement .

    $default  reduce using rule 147 (function_definition)


State 31

  102 compound_statement: compound_statement_start . '}'
  103                   | compound_statement_start . statement_list '}'

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 52
    '}'          shift, and go to state 53
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement                 go to state 55
    non_blank_statement       go to state 56
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    statement_list            go to state 60
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 32

    0 $accept: translation_unit $end .

    $default  accept


State 33

  165 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 165 (translation_unit)


State 34

   74 qualified_type_specifier: CONST $@1 type_specifier .

    $default  reduce using rule 74 (qualified_type_specifier)


State 35

   83 type_specifier: struct_type_start . IDENTIFIER

    IDENTIFIER  shift, and go to state 75


State 36

  149 function_declarator: qualified_type_specifier IDENTIFIER '(' . function_parameter_type_list ')'
  150                    | qualified_type_specifier IDENTIFIER '(' . ')'

    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    CONST        shift, and go to state 11
    ')'          shift, and go to state 76

    qualified_type_specifier        go to state 77
    type_specifier                  go to state 13
    struct_type_start               go to state 35
    function_parameter_type_list    go to state 78
    function_parameter_list         go to state 79
    function_parameter_declaration  go to state 80


State 37

  143 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 81

    init_declarator             go to state 82
    init_declarator_identifier  go to state 26


State 38

  141 declaration: qualified_type_specifier init_declarator_list ';' .

    $default  reduce using rule 141 (declaration)


State 39

  145 init_declarator: init_declarator_identifier '=' . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 111


State 40

  157 struct_definition: struct_type_start IDENTIFIER '{' . struct_declaration_list '}' ';'

    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    CONST        shift, and go to state 11

    qualified_type_specifier  go to state 112
    type_specifier            go to state 13
    struct_type_start         go to state 35
    struct_declaration_list   go to state 113
    struct_declaration        go to state 114


State 41

  109 expression_statement: error .

    $default  reduce using rule 109 (expression_statement)


State 42

  137 jump_statement: BREAK . $@10 ';'

    $default  reduce using rule 136 ($@10)

    $@10  go to state 115


State 43

   99 case_statement: CASE . $@2 constant_expression ':'

    $default  reduce using rule 98 ($@2)

    $@2  go to state 116


State 44

  135 jump_statement: CONTINUE . $@9 ';'

    $default  reduce using rule 134 ($@9)

    $@9  go to state 117


State 45

  101 case_statement: DEFAULT . $@3 ':'

    $default  reduce using rule 100 ($@3)

    $@3  go to state 118


State 46

  133 do_start: DO .

    $default  reduce using rule 133 (do_start)


State 47

  130 for_start_start: FOR . '('

    '('  shift, and go to state 119


State 48

  115 if_start: IF . '(' $@5 expression ')'

    '('  shift, and go to state 120


State 49

  140 return_start: RETURN .

    $default  reduce using rule 140 (return_start)


State 50

  117 switch_start: SWITCH . $@6 '(' expression ')'

    $default  reduce using rule 116 ($@6)

    $@6  go to state 121


State 51

  132 while_start: WHILE . '(' $@8 expression ')'

    '('  shift, and go to state 122


State 52

   87 statement: ';' .

    $default  reduce using rule 87 (statement)


State 53

  102 compound_statement: compound_statement_start '}' .

    $default  reduce using rule 102 (compound_statement)


State 54

  141 declaration: qualified_type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 81

    init_declarator_list        go to state 24
    init_declarator             go to state 25
    init_declarator_identifier  go to state 26


State 55

  105 statement_list: statement .

    $default  reduce using rule 105 (statement_list)


State 56

   86 statement: non_blank_statement .

    $default  reduce using rule 86 (statement)


State 57

   90 non_blank_statement: labeled_statement .

    $default  reduce using rule 90 (non_blank_statement)


State 58

   97 labeled_statement: case_statement .

    $default  reduce using rule 97 (labeled_statement)


State 59

   91 non_blank_statement: compound_statement .

    $default  reduce using rule 91 (non_blank_statement)


State 60

  103 compound_statement: compound_statement_start statement_list . '}'
  106 statement_list: statement_list . statement

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 52
    '}'          shift, and go to state 123
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement                 go to state 124
    non_blank_statement       go to state 56
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 61

   92 non_blank_statement: expression_statement .

    $default  reduce using rule 92 (non_blank_statement)


State 62

  108 expression_statement: $@4 . expression ';'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 126


State 63

   93 non_blank_statement: selection_statement .

    $default  reduce using rule 93 (non_blank_statement)


State 64

  111 selection_statement: if_else_start . statement_blank_error

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 127
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement_blank_error     go to state 128
    non_blank_statement       go to state 129
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 65

  110 selection_statement: if_start . statement_blank_error
  113 if_else_start: if_start . statement_blank_error ELSE

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 127
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement_blank_error     go to state 130
    non_blank_statement       go to state 129
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 66

  112 selection_statement: switch_start . statement

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 52
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement                 go to state 131
    non_blank_statement       go to state 56
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 67

   94 non_blank_statement: iteration_statement .

    $default  reduce using rule 94 (non_blank_statement)


State 68

  121 iteration_statement: for_start . statement

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 52
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement                 go to state 132
    non_blank_statement       go to state 56
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 69

  122 for_start: for_start_start . ';' ';' ')'
  123          | for_start_start . expression ';' ';' ')'
  124          | for_start_start . ';' expression ';' ')'
  125          | for_start_start . expression ';' expression ';' ')'
  126          | for_start_start . ';' ';' expression ')'
  127          | for_start_start . expression ';' ';' expression ')'
  128          | for_start_start . ';' expression ';' expression ')'
  129          | for_start_start . expression ';' expression ';' expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96
    ';'                   shift, and go to state 133

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 134


State 70

  118 iteration_statement: while_start . statement

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 52
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement                 go to state 135
    non_blank_statement       go to state 56
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 71

  120 iteration_statement: do_start . statement WHILE $@7 '(' expression ')' ';'

    error        shift, and go to state 41
    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    BREAK        shift, and go to state 42
    CASE         shift, and go to state 43
    CONTINUE     shift, and go to state 44
    DEFAULT      shift, and go to state 45
    DO           shift, and go to state 46
    FOR          shift, and go to state 47
    IF           shift, and go to state 48
    RETURN       shift, and go to state 49
    SWITCH       shift, and go to state 50
    WHILE        shift, and go to state 51
    CONST        shift, and go to state 11
    ';'          shift, and go to state 52
    '{'          shift, and go to state 29

    IDENTIFIER            reduce using rule 107 ($@4)
    INTEGER_CONST         reduce using rule 107 ($@4)
    FLOAT_CONST           reduce using rule 107 ($@4)
    STRING_CONST          reduce using rule 107 ($@4)
    PLUSPLUS              reduce using rule 107 ($@4)
    MINUSMINUS            reduce using rule 107 ($@4)
    OBJECT_SELF_CONST     reduce using rule 107 ($@4)
    OBJECT_INVALID_CONST  reduce using rule 107 ($@4)
    '('                   reduce using rule 107 ($@4)
    '['                   reduce using rule 107 ($@4)
    '+'                   reduce using rule 107 ($@4)
    '-'                   reduce using rule 107 ($@4)
    '~'                   reduce using rule 107 ($@4)
    '!'                   reduce using rule 107 ($@4)

    qualified_type_specifier  go to state 54
    type_specifier            go to state 13
    struct_type_start         go to state 35
    statement                 go to state 136
    non_blank_statement       go to state 56
    labeled_statement         go to state 57
    case_statement            go to state 58
    compound_statement        go to state 59
    compound_statement_start  go to state 31
    expression_statement      go to state 61
    $@4                       go to state 62
    selection_statement       go to state 63
    if_else_start             go to state 64
    if_start                  go to state 65
    switch_start              go to state 66
    iteration_statement       go to state 67
    for_start                 go to state 68
    for_start_start           go to state 69
    while_start               go to state 70
    do_start                  go to state 71
    jump_statement            go to state 72
    return_start              go to state 73
    declaration               go to state 74


State 72

   95 non_blank_statement: jump_statement .

    $default  reduce using rule 95 (non_blank_statement)


State 73

  138 jump_statement: return_start . ';'
  139               | return_start . expression ';'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96
    ';'                   shift, and go to state 137

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 138


State 74

   96 non_blank_statement: declaration .

    $default  reduce using rule 96 (non_blank_statement)


State 75

   83 type_specifier: struct_type_start IDENTIFIER .

    $default  reduce using rule 83 (type_specifier)


State 76

  150 function_declarator: qualified_type_specifier IDENTIFIER '(' ')' .

    $default  reduce using rule 150 (function_declarator)


State 77

  155 function_parameter_declaration: qualified_type_specifier . IDENTIFIER
  156                               | qualified_type_specifier . IDENTIFIER '=' assignment_expression

    IDENTIFIER  shift, and go to state 139


State 78

  149 function_declarator: qualified_type_specifier IDENTIFIER '(' function_parameter_type_list . ')'

    ')'  shift, and go to state 140


State 79

  151 function_parameter_type_list: function_parameter_list .
  152                             | function_parameter_list . ','
  154 function_parameter_list: function_parameter_list . ',' function_parameter_declaration

    ','  shift, and go to state 141

    $default  reduce using rule 151 (function_parameter_type_list)


State 80

  153 function_parameter_list: function_parameter_declaration .

    $default  reduce using rule 153 (function_parameter_list)


State 81

  146 init_declarator_identifier: IDENTIFIER .

    $default  reduce using rule 146 (init_declarator_identifier)


State 82

  143 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 143 (init_declarator_list)


State 83

    1 primary_expression: IDENTIFIER .
   13 postfix_expression: IDENTIFIER . '(' argument_expression_list ')'
   14                   | IDENTIFIER . '(' ')'

    '('  shift, and go to state 142

    $default  reduce using rule 1 (primary_expression)


State 84

    2 primary_expression: INTEGER_CONST .

    $default  reduce using rule 2 (primary_expression)


State 85

    3 primary_expression: FLOAT_CONST .

    $default  reduce using rule 3 (primary_expression)


State 86

    4 primary_expression: STRING_CONST .

    $default  reduce using rule 4 (primary_expression)


State 87

   21 unary_expression: PLUSPLUS . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 143


State 88

   22 unary_expression: MINUSMINUS . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 144


State 89

    5 primary_expression: OBJECT_SELF_CONST .

    $default  reduce using rule 5 (primary_expression)


State 90

    6 primary_expression: OBJECT_INVALID_CONST .

    $default  reduce using rule 6 (primary_expression)


State 91

    7 primary_expression: '(' . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 145


State 92

    8 primary_expression: '[' . ']'
    9                   | '[' . FLOAT_CONST ']'
   10                   | '[' . FLOAT_CONST ',' FLOAT_CONST ']'
   11                   | '[' . FLOAT_CONST ',' FLOAT_CONST ',' FLOAT_CONST ']'

    FLOAT_CONST  shift, and go to state 146
    ']'          shift, and go to state 147


State 93

   23 unary_expression: '+' . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 148


State 94

   24 unary_expression: '-' . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 149


State 95

   25 unary_expression: '~' . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 150


State 96

   26 unary_expression: '!' . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 151


State 97

   12 postfix_expression: primary_expression .

    $default  reduce using rule 12 (postfix_expression)


State 98

   15 postfix_expression: postfix_expression . '.' IDENTIFIER
   16                   | postfix_expression . PLUSPLUS
   17                   | postfix_expression . MINUSMINUS
   20 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 152
    MINUSMINUS  shift, and go to state 153
    '.'         shift, and go to state 154

    $default  reduce using rule 20 (unary_expression)


State 99

   27 multiplicative_expression: unary_expression .
   59 assignment_expression: unary_expression . '=' assignment_expression
   60                      | unary_expression . MULEQ assignment_expression
   61                      | unary_expression . DIVEQ assignment_expression
   62                      | unary_expression . MODEQ assignment_expression
   63                      | unary_expression . ADDEQ assignment_expression
   64                      | unary_expression . SUBEQ assignment_expression
   65                      | unary_expression . SLEQ assignment_expression
   66                      | unary_expression . SREQ assignment_expression
   67                      | unary_expression . USREQ assignment_expression
   68                      | unary_expression . ANDEQ assignment_expression
   69                      | unary_expression . XOREQ assignment_expression
   70                      | unary_expression . OREQ assignment_expression

    ADDEQ  shift, and go to state 155
    SUBEQ  shift, and go to state 156
    MULEQ  shift, and go to state 157
    DIVEQ  shift, and go to state 158
    MODEQ  shift, and go to state 159
    XOREQ  shift, and go to state 160
    ANDEQ  shift, and go to state 161
    OREQ   shift, and go to state 162
    SLEQ   shift, and go to state 163
    SREQ   shift, and go to state 164
    USREQ  shift, and go to state 165
    '='    shift, and go to state 166

    $default  reduce using rule 27 (multiplicative_expression)


State 100

   28 multiplicative_expression: multiplicative_expression . '*' unary_expression
   29                          | multiplicative_expression . '/' unary_expression
   30                          | multiplicative_expression . '%' unary_expression
   31 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 167
    '/'  shift, and go to state 168
    '%'  shift, and go to state 169

    $default  reduce using rule 31 (additive_expression)


State 101

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   34 shift_expression: additive_expression .

    '+'  shift, and go to state 170
    '-'  shift, and go to state 171

    $default  reduce using rule 34 (shift_expression)


State 102

   35 shift_expression: shift_expression . SL additive_expression
   36                 | shift_expression . SR additive_expression
   37                 | shift_expression . USR additive_expression
   38 relational_expression: shift_expression .

    SL   shift, and go to state 172
    SR   shift, and go to state 173
    USR  shift, and go to state 174

    $default  reduce using rule 38 (relational_expression)


State 103

   39 relational_expression: relational_expression . '<' shift_expression
   40                      | relational_expression . '>' shift_expression
   41                      | relational_expression . LTEQ shift_expression
   42                      | relational_expression . GTEQ shift_expression
   43 equality_expression: relational_expression .

    LTEQ  shift, and go to state 175
    GTEQ  shift, and go to state 176
    '<'   shift, and go to state 177
    '>'   shift, and go to state 178

    $default  reduce using rule 43 (equality_expression)


State 104

   44 equality_expression: equality_expression . EQ relational_expression
   45                    | equality_expression . NOTEQ relational_expression
   46 and_expression: equality_expression .

    EQ     shift, and go to state 179
    NOTEQ  shift, and go to state 180

    $default  reduce using rule 46 (and_expression)


State 105

   47 and_expression: and_expression . '&' equality_expression
   48 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 181

    $default  reduce using rule 48 (exclusive_or_expression)


State 106

   49 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   50 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 182

    $default  reduce using rule 50 (inclusive_or_expression)


State 107

   51 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   52 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 183

    $default  reduce using rule 52 (logical_and_expression)


State 108

   53 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
   54 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 184

    $default  reduce using rule 54 (logical_or_expression)


State 109

   55 logical_or_expression: logical_or_expression . OROR logical_and_expression
   56 conditional_expression: logical_or_expression .
   57                       | logical_or_expression . '?' expression ':' conditional_expression

    OROR  shift, and go to state 185
    '?'   shift, and go to state 186

    $default  reduce using rule 56 (conditional_expression)


State 110

   58 assignment_expression: conditional_expression .

    $default  reduce using rule 58 (assignment_expression)


State 111

  145 init_declarator: init_declarator_identifier '=' assignment_expression .

    $default  reduce using rule 145 (init_declarator)


State 112

  160 struct_declaration: qualified_type_specifier . struct_declarator_list ';'

    IDENTIFIER  shift, and go to state 187

    struct_declarator_list  go to state 188


State 113

  157 struct_definition: struct_type_start IDENTIFIER '{' struct_declaration_list . '}' ';'
  159 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    CONST        shift, and go to state 11
    '}'          shift, and go to state 189

    qualified_type_specifier  go to state 112
    type_specifier            go to state 13
    struct_type_start         go to state 35
    struct_declaration        go to state 190


State 114

  158 struct_declaration_list: struct_declaration .

    $default  reduce using rule 158 (struct_declaration_list)


State 115

  137 jump_statement: BREAK $@10 . ';'

    ';'  shift, and go to state 191


State 116

   99 case_statement: CASE $@2 . constant_expression ':'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 193
    constant_expression        go to state 194


State 117

  135 jump_statement: CONTINUE $@9 . ';'

    ';'  shift, and go to state 195


State 118

  101 case_statement: DEFAULT $@3 . ':'

    ':'  shift, and go to state 196


State 119

  130 for_start_start: FOR '(' .

    $default  reduce using rule 130 (for_start_start)


State 120

  115 if_start: IF '(' . $@5 expression ')'

    $default  reduce using rule 114 ($@5)

    $@5  go to state 197


State 121

  117 switch_start: SWITCH $@6 . '(' expression ')'

    '('  shift, and go to state 198


State 122

  132 while_start: WHILE '(' . $@8 expression ')'

    $default  reduce using rule 131 ($@8)

    $@8  go to state 199


State 123

  103 compound_statement: compound_statement_start statement_list '}' .

    $default  reduce using rule 103 (compound_statement)


State 124

  106 statement_list: statement_list statement .

    $default  reduce using rule 106 (statement_list)


State 125

   71 expression: assignment_expression .

    $default  reduce using rule 71 (expression)


State 126

  108 expression_statement: $@4 expression . ';'

    ';'  shift, and go to state 200


State 127

   89 statement_blank_error: ';' .

    $default  reduce using rule 89 (statement_blank_error)


State 128

  111 selection_statement: if_else_start statement_blank_error .

    $default  reduce using rule 111 (selection_statement)


State 129

   88 statement_blank_error: non_blank_statement .

    $default  reduce using rule 88 (statement_blank_error)


State 130

  110 selection_statement: if_start statement_blank_error .
  113 if_else_start: if_start statement_blank_error . ELSE

    ELSE  shift, and go to state 201

    ELSE      [reduce using rule 110 (selection_statement)]
    $default  reduce using rule 110 (selection_statement)


State 131

  112 selection_statement: switch_start statement .

    $default  reduce using rule 112 (selection_statement)


State 132

  121 iteration_statement: for_start statement .

    $default  reduce using rule 121 (iteration_statement)


State 133

  122 for_start: for_start_start ';' . ';' ')'
  124          | for_start_start ';' . expression ';' ')'
  126          | for_start_start ';' . ';' expression ')'
  128          | for_start_start ';' . expression ';' expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96
    ';'                   shift, and go to state 202

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 203


State 134

  123 for_start: for_start_start expression . ';' ';' ')'
  125          | for_start_start expression . ';' expression ';' ')'
  127          | for_start_start expression . ';' ';' expression ')'
  129          | for_start_start expression . ';' expression ';' expression ')'

    ';'  shift, and go to state 204


State 135

  118 iteration_statement: while_start statement .

    $default  reduce using rule 118 (iteration_statement)


State 136

  120 iteration_statement: do_start statement . WHILE $@7 '(' expression ')' ';'

    WHILE  shift, and go to state 205


State 137

  138 jump_statement: return_start ';' .

    $default  reduce using rule 138 (jump_statement)


State 138

  139 jump_statement: return_start expression . ';'

    ';'  shift, and go to state 206


State 139

  155 function_parameter_declaration: qualified_type_specifier IDENTIFIER .
  156                               | qualified_type_specifier IDENTIFIER . '=' assignment_expression

    '='  shift, and go to state 207

    $default  reduce using rule 155 (function_parameter_declaration)


State 140

  149 function_declarator: qualified_type_specifier IDENTIFIER '(' function_parameter_type_list ')' .

    $default  reduce using rule 149 (function_declarator)


State 141

  152 function_parameter_type_list: function_parameter_list ',' .
  154 function_parameter_list: function_parameter_list ',' . function_parameter_declaration

    FLOAT_TYPE   shift, and go to state 2
    INT_TYPE     shift, and go to state 3
    OBJECT_TYPE  shift, and go to state 4
    STRING_TYPE  shift, and go to state 5
    VOID_TYPE    shift, and go to state 6
    STRUCT_TYPE  shift, and go to state 7
    VECTOR_TYPE  shift, and go to state 8
    ENGINE_TYPE  shift, and go to state 9
    ACTION_TYPE  shift, and go to state 10
    CONST        shift, and go to state 11

    $default  reduce using rule 152 (function_parameter_type_list)

    qualified_type_specifier        go to state 77
    type_specifier                  go to state 13
    struct_type_start               go to state 35
    function_parameter_declaration  go to state 208


State 142

   13 postfix_expression: IDENTIFIER '(' . argument_expression_list ')'
   14                   | IDENTIFIER '(' . ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    ')'                   shift, and go to state 209
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    argument_expression_list   go to state 210
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 211


State 143

   21 unary_expression: PLUSPLUS unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 144

   22 unary_expression: MINUSMINUS unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 145

    7 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 212


State 146

    9 primary_expression: '[' FLOAT_CONST . ']'
   10                   | '[' FLOAT_CONST . ',' FLOAT_CONST ']'
   11                   | '[' FLOAT_CONST . ',' FLOAT_CONST ',' FLOAT_CONST ']'

    ']'  shift, and go to state 213
    ','  shift, and go to state 214


State 147

    8 primary_expression: '[' ']' .

    $default  reduce using rule 8 (primary_expression)


State 148

   23 unary_expression: '+' unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 149

   24 unary_expression: '-' unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 150

   25 unary_expression: '~' unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 151

   26 unary_expression: '!' unary_expression .

    $default  reduce using rule 26 (unary_expression)


State 152

   16 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 16 (postfix_expression)


State 153

   17 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 17 (postfix_expression)


State 154

   15 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 155

   63 assignment_expression: unary_expression ADDEQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 216


State 156

   64 assignment_expression: unary_expression SUBEQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 217


State 157

   60 assignment_expression: unary_expression MULEQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 218


State 158

   61 assignment_expression: unary_expression DIVEQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 219


State 159

   62 assignment_expression: unary_expression MODEQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 220


State 160

   69 assignment_expression: unary_expression XOREQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 221


State 161

   68 assignment_expression: unary_expression ANDEQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 222


State 162

   70 assignment_expression: unary_expression OREQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 223


State 163

   65 assignment_expression: unary_expression SLEQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 224


State 164

   66 assignment_expression: unary_expression SREQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 225


State 165

   67 assignment_expression: unary_expression USREQ . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 226


State 166

   59 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 227


State 167

   28 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 228


State 168

   29 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 229


State 169

   30 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 230


State 170

   32 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 231


State 171

   33 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 232


State 172

   35 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 233


State 173

   36 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 234


State 174

   37 shift_expression: shift_expression USR . additive_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 235


State 175

   41 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 236


State 176

   42 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 237


State 177

   39 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 238


State 178

   40 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 239


State 179

   44 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 240


State 180

   45 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 241


State 181

   47 and_expression: and_expression '&' . equality_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 242


State 182

   49 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 243


State 183

   51 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 244


State 184

   53 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 245


State 185

   55 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 246


State 186

   57 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 247


State 187

  161 struct_declarator_list: IDENTIFIER .

    $default  reduce using rule 161 (struct_declarator_list)


State 188

  160 struct_declaration: qualified_type_specifier struct_declarator_list . ';'
  162 struct_declarator_list: struct_declarator_list . ',' IDENTIFIER

    ','  shift, and go to state 248
    ';'  shift, and go to state 249


State 189

  157 struct_definition: struct_type_start IDENTIFIER '{' struct_declaration_list '}' . ';'

    ';'  shift, and go to state 250


State 190

  159 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 159 (struct_declaration_list)


State 191

  137 jump_statement: BREAK $@10 ';' .

    $default  reduce using rule 137 (jump_statement)


State 192

   27 multiplicative_expression: unary_expression .

    $default  reduce using rule 27 (multiplicative_expression)


State 193

   72 constant_expression: conditional_expression .

    $default  reduce using rule 72 (constant_expression)


State 194

   99 case_statement: CASE $@2 constant_expression . ':'

    ':'  shift, and go to state 251


State 195

  135 jump_statement: CONTINUE $@9 ';' .

    $default  reduce using rule 135 (jump_statement)


State 196

  101 case_statement: DEFAULT $@3 ':' .

    $default  reduce using rule 101 (case_statement)


State 197

  115 if_start: IF '(' $@5 . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 252


State 198

  117 switch_start: SWITCH $@6 '(' . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 253


State 199

  132 while_start: WHILE '(' $@8 . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 254


State 200

  108 expression_statement: $@4 expression ';' .

    $default  reduce using rule 108 (expression_statement)


State 201

  113 if_else_start: if_start statement_blank_error ELSE .

    $default  reduce using rule 113 (if_else_start)


State 202

  122 for_start: for_start_start ';' ';' . ')'
  126          | for_start_start ';' ';' . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    ')'                   shift, and go to state 255
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 256


State 203

  124 for_start: for_start_start ';' expression . ';' ')'
  128          | for_start_start ';' expression . ';' expression ')'

    ';'  shift, and go to state 257


State 204

  123 for_start: for_start_start expression ';' . ';' ')'
  125          | for_start_start expression ';' . expression ';' ')'
  127          | for_start_start expression ';' . ';' expression ')'
  129          | for_start_start expression ';' . expression ';' expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96
    ';'                   shift, and go to state 258

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 259


State 205

  120 iteration_statement: do_start statement WHILE . $@7 '(' expression ')' ';'

    $default  reduce using rule 119 ($@7)

    $@7  go to state 260


State 206

  139 jump_statement: return_start expression ';' .

    $default  reduce using rule 139 (jump_statement)


State 207

  156 function_parameter_declaration: qualified_type_specifier IDENTIFIER '=' . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 261


State 208

  154 function_parameter_list: function_parameter_list ',' function_parameter_declaration .

    $default  reduce using rule 154 (function_parameter_list)


State 209

   14 postfix_expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 14 (postfix_expression)


State 210

   13 postfix_expression: IDENTIFIER '(' argument_expression_list . ')'
   19 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 262
    ','  shift, and go to state 263


State 211

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 212

    7 primary_expression: '(' expression ')' .

    $default  reduce using rule 7 (primary_expression)


State 213

    9 primary_expression: '[' FLOAT_CONST ']' .

    $default  reduce using rule 9 (primary_expression)


State 214

   10 primary_expression: '[' FLOAT_CONST ',' . FLOAT_CONST ']'
   11                   | '[' FLOAT_CONST ',' . FLOAT_CONST ',' FLOAT_CONST ']'

    FLOAT_CONST  shift, and go to state 264


State 215

   15 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 15 (postfix_expression)


State 216

   63 assignment_expression: unary_expression ADDEQ assignment_expression .

    $default  reduce using rule 63 (assignment_expression)


State 217

   64 assignment_expression: unary_expression SUBEQ assignment_expression .

    $default  reduce using rule 64 (assignment_expression)


State 218

   60 assignment_expression: unary_expression MULEQ assignment_expression .

    $default  reduce using rule 60 (assignment_expression)


State 219

   61 assignment_expression: unary_expression DIVEQ assignment_expression .

    $default  reduce using rule 61 (assignment_expression)


State 220

   62 assignment_expression: unary_expression MODEQ assignment_expression .

    $default  reduce using rule 62 (assignment_expression)


State 221

   69 assignment_expression: unary_expression XOREQ assignment_expression .

    $default  reduce using rule 69 (assignment_expression)


State 222

   68 assignment_expression: unary_expression ANDEQ assignment_expression .

    $default  reduce using rule 68 (assignment_expression)


State 223

   70 assignment_expression: unary_expression OREQ assignment_expression .

    $default  reduce using rule 70 (assignment_expression)


State 224

   65 assignment_expression: unary_expression SLEQ assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


State 225

   66 assignment_expression: unary_expression SREQ assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


State 226

   67 assignment_expression: unary_expression USREQ assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


State 227

   59 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 59 (assignment_expression)


State 228

   28 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 28 (multiplicative_expression)


State 229

   29 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 230

   30 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 231

   28 multiplicative_expression: multiplicative_expression . '*' unary_expression
   29                          | multiplicative_expression . '/' unary_expression
   30                          | multiplicative_expression . '%' unary_expression
   32 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 167
    '/'  shift, and go to state 168
    '%'  shift, and go to state 169

    $default  reduce using rule 32 (additive_expression)


State 232

   28 multiplicative_expression: multiplicative_expression . '*' unary_expression
   29                          | multiplicative_expression . '/' unary_expression
   30                          | multiplicative_expression . '%' unary_expression
   33 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 167
    '/'  shift, and go to state 168
    '%'  shift, and go to state 169

    $default  reduce using rule 33 (additive_expression)


State 233

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   35 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 170
    '-'  shift, and go to state 171

    $default  reduce using rule 35 (shift_expression)


State 234

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   36 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 170
    '-'  shift, and go to state 171

    $default  reduce using rule 36 (shift_expression)


State 235

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   37 shift_expression: shift_expression USR additive_expression .

    '+'  shift, and go to state 170
    '-'  shift, and go to state 171

    $default  reduce using rule 37 (shift_expression)


State 236

   35 shift_expression: shift_expression . SL additive_expression
   36                 | shift_expression . SR additive_expression
   37                 | shift_expression . USR additive_expression
   41 relational_expression: relational_expression LTEQ shift_expression .

    SL   shift, and go to state 172
    SR   shift, and go to state 173
    USR  shift, and go to state 174

    $default  reduce using rule 41 (relational_expression)


State 237

   35 shift_expression: shift_expression . SL additive_expression
   36                 | shift_expression . SR additive_expression
   37                 | shift_expression . USR additive_expression
   42 relational_expression: relational_expression GTEQ shift_expression .

    SL   shift, and go to state 172
    SR   shift, and go to state 173
    USR  shift, and go to state 174

    $default  reduce using rule 42 (relational_expression)


State 238

   35 shift_expression: shift_expression . SL additive_expression
   36                 | shift_expression . SR additive_expression
   37                 | shift_expression . USR additive_expression
   39 relational_expression: relational_expression '<' shift_expression .

    SL   shift, and go to state 172
    SR   shift, and go to state 173
    USR  shift, and go to state 174

    $default  reduce using rule 39 (relational_expression)


State 239

   35 shift_expression: shift_expression . SL additive_expression
   36                 | shift_expression . SR additive_expression
   37                 | shift_expression . USR additive_expression
   40 relational_expression: relational_expression '>' shift_expression .

    SL   shift, and go to state 172
    SR   shift, and go to state 173
    USR  shift, and go to state 174

    $default  reduce using rule 40 (relational_expression)


State 240

   39 relational_expression: relational_expression . '<' shift_expression
   40                      | relational_expression . '>' shift_expression
   41                      | relational_expression . LTEQ shift_expression
   42                      | relational_expression . GTEQ shift_expression
   44 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 175
    GTEQ  shift, and go to state 176
    '<'   shift, and go to state 177
    '>'   shift, and go to state 178

    $default  reduce using rule 44 (equality_expression)


State 241

   39 relational_expression: relational_expression . '<' shift_expression
   40                      | relational_expression . '>' shift_expression
   41                      | relational_expression . LTEQ shift_expression
   42                      | relational_expression . GTEQ shift_expression
   45 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 175
    GTEQ  shift, and go to state 176
    '<'   shift, and go to state 177
    '>'   shift, and go to state 178

    $default  reduce using rule 45 (equality_expression)


State 242

   44 equality_expression: equality_expression . EQ relational_expression
   45                    | equality_expression . NOTEQ relational_expression
   47 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 179
    NOTEQ  shift, and go to state 180

    $default  reduce using rule 47 (and_expression)


State 243

   47 and_expression: and_expression . '&' equality_expression
   49 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 181

    $default  reduce using rule 49 (exclusive_or_expression)


State 244

   49 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   51 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 182

    $default  reduce using rule 51 (inclusive_or_expression)


State 245

   51 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   53 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 183

    $default  reduce using rule 53 (logical_and_expression)


State 246

   53 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
   55 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 184

    $default  reduce using rule 55 (logical_or_expression)


State 247

   57 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 265


State 248

  162 struct_declarator_list: struct_declarator_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 266


State 249

  160 struct_declaration: qualified_type_specifier struct_declarator_list ';' .

    $default  reduce using rule 160 (struct_declaration)


State 250

  157 struct_definition: struct_type_start IDENTIFIER '{' struct_declaration_list '}' ';' .

    $default  reduce using rule 157 (struct_definition)


State 251

   99 case_statement: CASE $@2 constant_expression ':' .

    $default  reduce using rule 99 (case_statement)


State 252

  115 if_start: IF '(' $@5 expression . ')'

    ')'  shift, and go to state 267


State 253

  117 switch_start: SWITCH $@6 '(' expression . ')'

    ')'  shift, and go to state 268


State 254

  132 while_start: WHILE '(' $@8 expression . ')'

    ')'  shift, and go to state 269


State 255

  122 for_start: for_start_start ';' ';' ')' .

    $default  reduce using rule 122 (for_start)


State 256

  126 for_start: for_start_start ';' ';' expression . ')'

    ')'  shift, and go to state 270


State 257

  124 for_start: for_start_start ';' expression ';' . ')'
  128          | for_start_start ';' expression ';' . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    ')'                   shift, and go to state 271
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 272


State 258

  123 for_start: for_start_start expression ';' ';' . ')'
  127          | for_start_start expression ';' ';' . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    ')'                   shift, and go to state 273
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 274


State 259

  125 for_start: for_start_start expression ';' expression . ';' ')'
  129          | for_start_start expression ';' expression . ';' expression ')'

    ';'  shift, and go to state 275


State 260

  120 iteration_statement: do_start statement WHILE $@7 . '(' expression ')' ';'

    '('  shift, and go to state 276


State 261

  156 function_parameter_declaration: qualified_type_specifier IDENTIFIER '=' assignment_expression .

    $default  reduce using rule 156 (function_parameter_declaration)


State 262

   13 postfix_expression: IDENTIFIER '(' argument_expression_list ')' .

    $default  reduce using rule 13 (postfix_expression)


State 263

   19 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 277


State 264

   10 primary_expression: '[' FLOAT_CONST ',' FLOAT_CONST . ']'
   11                   | '[' FLOAT_CONST ',' FLOAT_CONST . ',' FLOAT_CONST ']'

    ']'  shift, and go to state 278
    ','  shift, and go to state 279


State 265

   57 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 192
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 280


State 266

  162 struct_declarator_list: struct_declarator_list ',' IDENTIFIER .

    $default  reduce using rule 162 (struct_declarator_list)


State 267

  115 if_start: IF '(' $@5 expression ')' .

    $default  reduce using rule 115 (if_start)


State 268

  117 switch_start: SWITCH $@6 '(' expression ')' .

    $default  reduce using rule 117 (switch_start)


State 269

  132 while_start: WHILE '(' $@8 expression ')' .

    $default  reduce using rule 132 (while_start)


State 270

  126 for_start: for_start_start ';' ';' expression ')' .

    $default  reduce using rule 126 (for_start)


State 271

  124 for_start: for_start_start ';' expression ';' ')' .

    $default  reduce using rule 124 (for_start)


State 272

  128 for_start: for_start_start ';' expression ';' expression . ')'

    ')'  shift, and go to state 281


State 273

  123 for_start: for_start_start expression ';' ';' ')' .

    $default  reduce using rule 123 (for_start)


State 274

  127 for_start: for_start_start expression ';' ';' expression . ')'

    ')'  shift, and go to state 282


State 275

  125 for_start: for_start_start expression ';' expression ';' . ')'
  129          | for_start_start expression ';' expression ';' . expression ')'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    ')'                   shift, and go to state 283
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 284


State 276

  120 iteration_statement: do_start statement WHILE $@7 '(' . expression ')' ';'

    IDENTIFIER            shift, and go to state 83
    INTEGER_CONST         shift, and go to state 84
    FLOAT_CONST           shift, and go to state 85
    STRING_CONST          shift, and go to state 86
    PLUSPLUS              shift, and go to state 87
    MINUSMINUS            shift, and go to state 88
    OBJECT_SELF_CONST     shift, and go to state 89
    OBJECT_INVALID_CONST  shift, and go to state 90
    '('                   shift, and go to state 91
    '['                   shift, and go to state 92
    '+'                   shift, and go to state 93
    '-'                   shift, and go to state 94
    '~'                   shift, and go to state 95
    '!'                   shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    assignment_expression      go to state 125
    expression                 go to state 285


State 277

   19 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 278

   10 primary_expression: '[' FLOAT_CONST ',' FLOAT_CONST ']' .

    $default  reduce using rule 10 (primary_expression)


State 279

   11 primary_expression: '[' FLOAT_CONST ',' FLOAT_CONST ',' . FLOAT_CONST ']'

    FLOAT_CONST  shift, and go to state 286


State 280

   57 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 57 (conditional_expression)


State 281

  128 for_start: for_start_start ';' expression ';' expression ')' .

    $default  reduce using rule 128 (for_start)


State 282

  127 for_start: for_start_start expression ';' ';' expression ')' .

    $default  reduce using rule 127 (for_start)


State 283

  125 for_start: for_start_start expression ';' expression ';' ')' .

    $default  reduce using rule 125 (for_start)


State 284

  129 for_start: for_start_start expression ';' expression ';' expression . ')'

    ')'  shift, and go to state 287


State 285

  120 iteration_statement: do_start statement WHILE $@7 '(' expression . ')' ';'

    ')'  shift, and go to state 288


State 286

   11 primary_expression: '[' FLOAT_CONST ',' FLOAT_CONST ',' FLOAT_CONST . ']'

    ']'  shift, and go to state 289


State 287

  129 for_start: for_start_start expression ';' expression ';' expression ')' .

    $default  reduce using rule 129 (for_start)


State 288

  120 iteration_statement: do_start statement WHILE $@7 '(' expression ')' . ';'

    ';'  shift, and go to state 290


State 289

   11 primary_expression: '[' FLOAT_CONST ',' FLOAT_CONST ',' FLOAT_CONST ']' .

    $default  reduce using rule 11 (primary_expression)


State 290

  120 iteration_statement: do_start statement WHILE $@7 '(' expression ')' ';' .

    $default  reduce using rule 120 (iteration_statement)
